dependents: 
description: Creates pull requests for documentation contributions
list: readme
name: Docs PR maker
plugin-type: plugin
title: $:/plugins/sq/docs-pr-maker
type: application/json
version: 5.3.0

{"tiddlers":{"$:/DefaultTiddlers":{"title":"$:/DefaultTiddlers","created":"20131127215321439","modified":"20211023104952021","type":"text/vnd.tiddlywiki","text":"[list[$:/StoryList]]"},"$:/config/RelinkOnRename":{"title":"$:/config/RelinkOnRename","created":"20230722142920162","modified":"20230722142920162","type":"text/vnd.tiddlywiki","text":"yes"},"$:/config/sq/makepr/repoOwner":{"title":"$:/config/sq/makepr/repoOwner","created":"20211024081121207","modified":"20211024081235829","tags":"","text":"jermolene"},"$:/config/sq/makepr/autotrack":{"title":"$:/config/sq/makepr/autotrack","text":"yes"},"$:/images/tabler-icons/drag-drop-2":{"title":"$:/images/tabler-icons/drag-drop-2","caption":"drag-drop-2","collection":"","library":"Tabler Icons","library_version":"1.39.1","tags":"$:/tags/Image Icons Images SVG","text":"<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-tbi-drag-drop-2 tc-image-button\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/><rect x=\"8\" y=\"8\" width=\"12\" height=\"12\" rx=\"2\" /><line x1=\"4\" y1=\"4\" x2=\"4\" y2=\"4.01\" /><line x1=\"8\" y1=\"4\" x2=\"8\" y2=\"4.01\" /><line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"4.01\" /><line x1=\"16\" y1=\"4\" x2=\"16\" y2=\"4.01\" /><line x1=\"4\" y1=\"8\" x2=\"4\" y2=\"8.01\" /><line x1=\"4\" y1=\"12\" x2=\"4\" y2=\"12.01\" /><line x1=\"4\" y1=\"16\" x2=\"4\" y2=\"16.01\" /></svg>"},"$:/plugins/sq/makepr/autotrack-actions":{"title":"$:/plugins/sq/makepr/autotrack-actions","created":"20211113065252397","modified":"20211113070558804","tags":"$:/tags/sq/change-actions","text":"<$list filter=\"[enlist<actionTiddler>!is[draft]] :filter[{$:/config/sq/makepr/autotrack}match[yes]]\" >\n<$action-listops $tiddler=\"$:/temp/pr-tiddlers\" $field=\"text\" $subfilter={{{ [<currentTiddler>format:titlelist[]] }}}/>\n<$action-log aT=<<actionTiddler>> cT=<<currentTiddler>> />\n</$list>\n"},"Notes":{"title":"Notes","created":"20211022232905241","modified":"20211104221525229","tags":"","type":"text/vnd.tiddlywiki","text":"The UI in the [[Contribution Form|Make a PR]] here is simple but it has the basic necessities and the process works.\n\n!! Preparations\n\n* You will need an account at [ext[https://GitHub.com]]\n* You need to [[sign the Contributor License Agreement (CLA)|https://tiddlywiki.com/#Signing%20the%20Contributor%20License%20Agreement]] if you have not already done so.\n* You need [[a GitHub personal access token|https://github.com/settings/tokens/new?scopes=public_repo]], so this wiki is allowed to create a pull request from your browser\n\n!! Prepare your changes\n\nThis //~TiddlyWiki// file contains a copy of tiddlywiki.com. You can edit and create tiddlers to submit them via the [[contribution form|Make a PR]].\n\n* Tiddlers you edit are automatically added to the PR form. You can also drag and drop tiddlers from under the `Open` or `Recent` sidebar tabs into the `Tiddlers to include` box on the form.\n\n* New tiddlers will need to have a physical path specified from the path select box.<br/>The box only appears if there are brand new tiddlers to be specified\n\n* If you are unsure what path to specify for new tiddlers, you can look at the path for existing \"neighbor\" tiddlers from the Table Of Contents.\n\n* To see the file path of an existing tiddler click on  the down arrow at the top right of the tiddler.\n** Then click on the //info// button. \n** Select the //sources// tab.\n** The path portion listed after `tw5.com.tiddlers/` is the physical path of that tiddler.\n\n!! Backup your changes\n\nHaving a backup will make it easy to create a new PR if the first one needs some changes\n\n* You can use the export preview button @@.pr-inline-button {{$:/core/images/export-button}}@@ to list all edited tiddlers and the form configuration in ~$:/AdvancedSearch\n* From there you can export / backup all of them as a JSON file\n\n!! Create a pull request (PR)\n\n* PRs are intentionally created against a test repository by default to avoid spamming the main repo while testing.\n\n* To make a PR against the main ~TiddlyWiki repository, use the \"Target Repository\" dropdown and select the \"Official TW Repository\"\n\n* In order for your PR to be accepted at the main repository, you will need to have signed the Contributor License Agreement (CLA). See Preparations.\n\n* If the \"Make a PR\" button is disabled, make sure you have filled out the PR title and message\n\n---\n\n''TODO''\n\n* File deletion/renaming.\n* Control of branch naming?\n"},"PR File Path Selection Macros":{"title":"PR File Path Selection Macros","created":"20211027005404249","modified":"20211029182952628","tags":"$:/tags/Macro","text":"\\define selectPRpath()\n<$select tiddler=<<selTiddler>> default=\"--pick-path--\">\n<option value=\"\">tiddlers (standard)</option>\n<$list filter=\"[<data>indexes[]] \n:map[<data>getindex<currentTiddler>split[/]butlast[]join[/]]\n+[!is[blank]unique[]sort[]]\" >\n<option value=<<currentTiddler>>><<currentTiddler>></option>\n</$list>\n</$select>\n\\end\n\n\\define findNewPRTiddlers()\n<$vars data=\"$:/config/OriginalTiddlerPaths\" pfx=\"../node_modules/tiddlywiki/editions/tw5.com/tiddlers/\">\n<$list filter=\"[subfilter{$:/temp/pr-tiddlers}] :map[<data>getindex<currentTiddler>then[KILL-THIS-TIDDLER]else<currentTiddler>] +[unique[]] -[[KILL-THIS-TIDDLER]]  +[!is[blank]]\" variable=newtid>\n<$vars selTiddler={{{ [[$:/temp/prpath-]addsuffix<newtid>]}}} >\n<tr><td><$text text=<<newtid>> /></td><td><<selectPRpath>></td></tr> \n</$vars>\n</$list>\n</$vars>\n\\end\n\n\\define buttonPRaddPath()\n<$vars regexp='\\^|<|>|/|~|:|\\?|\\\\|\\*|\\\"|\\|' >\n<$vars goodName={{{ [<newtid>search-replace:g:regexp<regexp>,[_]]}}} \n            jsonName={{{[<newtid>jsonstringify[]]}}}\n>\n<$list filter=\"[<selTiddler>get[text]trim[]!is[blank]]\" variable=\"dummy\">\n<$button class=\"tc-btn-invisible tc-tiddlylink\">{{$:/core/images/plus-button}}\n<$action-setfield $tiddler=<<data>> $index=<<jsonName>> $value={{{ [<selTiddler>get[text]addsuffix[/]addsuffix<goodName>addsuffix[.tid]] }}} />\n</$button>\n</$list>\n</$vars></$vars>\n\\end\n\n\\define updateOTP()\n<$list filter=\"[subfilter<unPathedTiddlersFilter>]\" variable=\"newtid\">\n<$vars selTiddler={{{[[$:/temp/prpath-]addsuffix<newtid>]}}} \n            regexp='\\^|<|>|/|~|:|\\?|\\\\|\\*|\\\"|\\|' \n            data=\"$:/config/OriginalTiddlerPaths\"\n>\n<$vars goodName={{{ [<newtid>search-replace:g:regexp<regexp>,[_]]}}} \n            jsonName={{{[<newtid>jsonstringify[]]}}}\n>\n<$list filter=\"[<selTiddler>get[text]trim[]!is[blank]]\" variable=\"dummy\">\n<$action-setfield $tiddler=<<data>> $index=<<jsonName>> $value={{{ [<selTiddler>get[text]addsuffix[/]addsuffix<goodName>addsuffix[.tid]] }}} />\n</$list>\n</$vars></$vars>\n</$list>\n\\end\n\n\n\\define createPRpaths()\n<table style=\"border: none;\">\n<<findNewPRTiddlers>>\n</table>\n\\end\n\n\\define arePathsOK(yes: \"yes\" no: \"no\" ) {{{[subfilter{$:/temp/pr-tiddlers}] :map[[$:/config/OriginalTiddlerPaths]getindex<currentTiddler>then[KILL-THIS-TIDDLER]else<currentTiddler>] +[unique[]] -[[KILL-THIS-TIDDLER]]  +[!is[blank]limit[1]then<__no__>else<__yes__>]}}}\n\n\\define unPathedTiddlersFilter() [subfilter{$:/temp/pr-tiddlers}] :map[[$:/config/OriginalTiddlerPaths]getindex<currentTiddler>then[KILL-THIS-TIDDLER]else<currentTiddler>] +[unique[]] -[[KILL-THIS-TIDDLER]]\n\n\\define unPathedTiddlers() {{{[subfilter<unPathedTiddlersFilter>]}}} \n\n\n\\define unPathedTiddlersx() {{{[subfilter{$:/temp/pr-tiddlers}] :map[[$:/config/OriginalTiddlerPaths]getindex<currentTiddler>then[KILL-THIS-TIDDLER]else<currentTiddler>] +[unique[]] -[[KILL-THIS-TIDDLER]]}}}\n\n\\define singleline(yes: \"yes\" no: \"no\") {{{[<__yes__>]}}}\n\n\\define areAllNewTiddlersPathed(yes: \"yes\" no: \"no\") {{{[subfilter<unPathedTiddlersFilter>addprefix[$:/temp/prpath-]is[missing]!is[blank]limit[1]then<__no__>else<__yes__>]}}}\n\n\\define test2() {{{[subfilter<unPathedTiddlersFilter>count[]]}}}\n\n\n<hr/>\n\n<<createPRpaths>>\n\n<<areAreNewTiddlersPathed>>\n\nPaths OK? <<arePathsOK>>\n\nUnpathed: <<unPathedTiddlers>>\n\nTest: <<test2>>\n\n<<xselectPRpath>>\n\n<$button>updateOTP\n<<updateOTP>>\n</$button>\n"},"$:/plugins/sq/makepr/styles":{"title":"$:/plugins/sq/makepr/styles","tags":"$:/tags/Stylesheet","text":"table.pr-table  tr:nth-child(6) {\n\tdisplay: <<arePathsOK none table-row>>;\n}\n\ntable.pr-table > tbody > tr > td:nth-child(1) {\n\twidth: 16em;\n}\n\n.pr-tiddlers {\n\tbackground: <<color code-background>>;\n\tpadding: 1em;\n}\n\n.pr-listmode-btn {\n\tfloat: right;\n\tpadding-left: .5em;\n}\n\n.pr-tiddlers .tc-droppable > .pr-list-placeholder {\n\tdisplay: block;\n\tpadding: 1em;\n}\n\n.pr-inline-button {\n  width: 1.2em; \n  vertical-align:-1ex; \n  display:inline-block; \n}\n\n/*\nstrike through for icons\n\nbackground-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none'%3e%3cline x1='0' y1='100' x2='100' y2='0' stroke-width='8' stroke='%230B2437'/%3e%3c/svg%3e\");\n    background-size: 100% 100%;\n*/"},"Simple Submit":{"title":"Simple Submit","created":"20230722182032523","modified":"20230722184417535","tags":"","type":"text/vnd.tiddlywiki","text":"\\define inputActions()\n<$action-deletetiddler $tiddler=\"$:/state/makepr/prlink\"/>\n\\end\n\n\\define makePRActions()\n<<updateOTP>>\n<$action-sendmessage\n\t$message=\"tm-makepr\"\n\t$param={{$:/temp/pr-tiddlers}}\n\tslug={{{ [{$:/temp/pr-title}slugify[]] }}}\n/>\n\\end\n\n<div class=\"submission-form\">\n\n<fieldset>\n<legend>Review tiddlers to be submitted:</legend>\n{{$:/plugins/sq/makepr/pr-tiddler-list}}<div style=\"width: 80%\"><$list filter=\"[subfilter{$:/temp/pr-tiddlers}!is[tiddler]limit[1]]\">@@color:red;Some specified tiddlers do not exist. @@</$list></div>\n</fieldset>\n\n<fieldset>\n<legend>Provide a title and description for your changes:</legend>\nTitle:\n<$edit-text tiddler=\"$:/temp/pr-title\" default=\"\" tag=\"input\" class=\"tc-edit-texteditor\" inputActions=<<inputActions>>/>\nDescription:\n<$edit-text tiddler=\"$:/temp/pr-message\" default=\"\" tag=\"textarea\" class=\"tc-edit-texteditor\"/>\n</fieldset>\n\n<$list filter=\"[password-exists[github-docs-pr]match[no]]\">\n<fieldset class=\"error-missing-token\">\n<legend>Github authentication token:</legend>\n<$password name=\"github-docs-pr\"/>\n</fieldset>\n</$list>\n\n<$button\n\tactions=<<makePRActions>> \n\tdisabled={{{ [{$:/temp/pr-title}] =[{$:/temp/pr-message}] [{$:/temp/pr-tiddlers}] +[!is[blank]count[]!match[3]then[yes]else[]!is[blank]]  :else[subfilter{$:/temp/pr-tiddlers}!is[tiddler]limit[1]then[yes]else[]!is[blank]]  }}}\n\t>\nSubmit documentation update\n</$button>\n\n<div class=\"submission-status\">\n<$list filter=\"[{$:/state/makepr/prlink}!is[blank]]\">\n@@background-color:#D7BCE880;padding:1em;margin:1em;border-radius:0.5em;\n<$list filter=\"[[$:/state/makepr/prlink]has[link]]\" emptyMessage=\"\"\"<$text text=<<currentTiddler>>/>\"\"\">\n<a href={{!!link}} class=\"tc-tiddlylink-external\" target=\"_blank\" rel=\"noopener noreferrer\"><$text text={{{[<currentTiddler>get[text]]}}}/></a>\n</$list>\n@@\n</$list>\n</div>\n\n</div>"},"Submit documentation updates - advanced":{"title":"Submit documentation updates - advanced","created":"20230722171650945","modified":"20230722200213069","type":"text/vnd.tiddlywiki","text":"\\define inputActions()\n<$action-deletetiddler $tiddler=\"$:/state/makepr/prlink\"/>\n\\end\n\n\\define makePRActions()\n<<updateOTP>>\n<$action-sendmessage\n\t$message=\"tm-makepr\"\n\t$param={{$:/temp/pr-tiddlers}}\n\tslug={{{ [{$:/temp/pr-title}slugify[]] }}}\n/>\n\\end\n\n\\define targetRepo()\n<$select tiddler=\"$:/config/sq/makepr/repoOwner\" default=\"\">\n<option value=\"jermolene\">Official TW Repository</option>\n<option value=\"twlinks-ci-test\">Test Repository</option>\n</$select>\n\\end\n\nAutomatically add new and modified tiddlers to the submission: <$select tiddler=\"$:/config/sq/makepr/autotrack\" default='yes'>\n<option value=\"yes\">yes</option>\n<option value=\"no\">no</option>\n</$select>\n\n|tc-import-table tc-edit-field-value pr-table|k\n|Target repository |<<targetRepo>> |\n|[[Github Personal Access Token|https://github.com/settings/tokens/new?scopes=public_repo]] |<$password name=\"github-docs-pr\"/> |\n|PR title: |<$edit-text tiddler=\"$:/temp/pr-title\" default=\"\" tag=\"input\" class=\"tc-edit-texteditor\" inputActions=<<inputActions>>/>|\n|PR message: |<$edit-text tiddler=\"$:/temp/pr-message\" default=\"\" tag=\"textarea\" class=\"tc-edit-texteditor\"/>|\n|Tiddlers to include: |{{$:/plugins/sq/makepr/pr-tiddler-list}}<div style=\"width: 80%\"><$list filter=\"[subfilter{$:/temp/pr-tiddlers}!is[tiddler]limit[1]]\">@@color:red;Some specified tiddlers do not exist. @@</$list><$wikify text=\"<<arePathsOK>>\" name=\"pathsOK\" ><$list filter=\"[<pathsOK>match[no]]\">@@color:red;Specify file paths for new tiddlers below.@@</$list></$wikify></div>|\n|Specify file paths for any new tiddlers here: |^//Select path for each new tiddler.// <<createPRpaths>>  |\n\n<$wikify text=\"<<areAllNewTiddlersPathed>>\" name=\"allNewTiddlersPathed\" >\n<$button\n\tactions=<<makePRActions>> \n\tdisabled={{{ [{$:/temp/pr-title}] =[{$:/temp/pr-message}] [{$:/temp/pr-tiddlers}] +[!is[blank]count[]!match[3]then[yes]else[]!is[blank]]  :else[subfilter{$:/temp/pr-tiddlers}!is[tiddler]limit[1]then[yes]else[]!is[blank]] :else[<allNewTiddlersPathed>match[no]then[yes]else[no]] }}}\n\t>\nSubmit documentation update\n</$button>\n</$wikify>\n\n<$list filter=\"[{$:/state/makepr/prlink}!is[blank]]\">\n@@background-color:#D7BCE880;padding:1em;margin:1em;border-radius:0.5em;\n<$list filter=\"[[$:/state/makepr/prlink]has[link]]\" emptyMessage=\"\"\"<$text text=<<currentTiddler>>/>\"\"\">\n<a href={{!!link}} class=\"tc-tiddlylink-external\" target=\"_blank\" rel=\"noopener noreferrer\"><$text text={{{[<currentTiddler>get[text]]}}}/></a>\n</$list>\n@@\n</$list>\n"},"Submit documentation updates":{"title":"Submit documentation updates","type":"text/vnd.tiddlywiki","text":"\\define inputActions()\n<$action-deletetiddler $tiddler=\"$:/state/makepr/prlink\"/>\n\\end\n\n\\define makePRActions()\n<<updateOTP>>\n<$action-sendmessage\n\t$message=\"tm-makepr\"\n\t$param={{$:/temp/pr-tiddlers}}\n\tslug={{{ [{$:/temp/pr-title}slugify[]] }}}\n\tstate=\"$:/state/makepr/prlink\"\n/>\n\\end\n\n\\define bluractions()\n<$action-setfield $tiddler=\"$:/temp/refresh-token-status\" text=\"yes\"/>\n\\end\n\n<div class=\"submission-form\">\n<div class=\"form-group\">\n<h2>Review tiddlers to be submitted:</h2>\n<p>//(any tiddlers you modify or create are automatically added here)//</p>\n{{$:/plugins/sq/makepr/pr-tiddler-list}}<div style=\"width: 80%\"><$list filter=\"[subfilter{$:/temp/pr-tiddlers}!is[tiddler]limit[1]]\">@@color:red;Some specified tiddlers do not exist. @@</$list></div>\n</div>\n\n<div class=\"form-group\">\n<h2>Provide a title and description for your changes:</h2>\n<label>Title:\n<$edit-text tiddler=\"$:/temp/pr-title\" default=\"\" tag=\"input\" class=\"tc-edit-texteditor\" inputActions=<<inputActions>>/></label>\n<label>Description:\n<$edit-text tiddler=\"$:/temp/pr-message\" default=\"\" tag=\"textarea\" class=\"tc-edit-texteditor\"/></label>\n</div>\n\n<$let null={{$:/temp/refresh-token-status}}>\n<$list filter=\"[password-exists[github-docs-pr]match[no]]\">\n<div class=\"form-group error-missing-token\">\n<h2>Provide a [[GitHub authentication token|https://github.com/settings/tokens/new?scopes=public_repo]]:</h2>\n<$eventcatcher $focusout=<<bluractions>> selector=\"input\" tag=\"span\">\n<$password name=\"github-docs-pr\"/>\n</$eventcatcher>\n</div>\n</$list>\n</$let>\n\n<$button\n\tactions=<<makePRActions>> \n\tdisabled={{{ [{$:/temp/pr-title}] =[{$:/temp/pr-message}] [{$:/temp/pr-tiddlers}] +[!is[blank]count[]!match[3]then[yes]else[]!is[blank]]  :else[subfilter{$:/temp/pr-tiddlers}!is[tiddler]limit[1]then[yes]else[]!is[blank]]  }}}\n\tclass=\"submit\"\n\t>\nSubmit documentation update\n</$button>\n\n\n<$list filter=\"[{$:/state/makepr/prlink}!is[blank]]\">\n<div class=\"submission-status\">\n<$list filter=\"[[$:/state/makepr/prlink]has[link]]\" emptyMessage=\"\"\"<$text text=<<currentTiddler>>/>\"\"\">\n<a href={{!!link}} class=\"tc-tiddlylink-external\" target=\"_blank\" rel=\"noopener noreferrer\"><$text text={{{[<currentTiddler>get[text]]}}}/></a>\n<$list filter=\"[<currentTiddler>get[text]prefix[Submission request created]]\">\n<$confetti/>\n<$confetti delay=300 originY=0.6  spread=100 scalar=1.5/>\n<$confetti delay=400 originY=0.55 spread=130/>\n<$confetti delay=500 originY=0.55 spread=170 scalar=2/>\n</$list>\n</$list>\n</div>\n</$list>\n</div>\n"},"$:/plugins/sq/contributor/load-pullrequest/startup.js":{"title":"$:/plugins/sq/contributor/load-pullrequest/startup.js","text":"/*\\\ntitle: $:/plugins/sq/contributor/load-pullrequest/startup.js\ntype: application/javascript\nmodule-type: startup\n\ncollabwriter\ndocuwriter\n\n\\*/\n\n(function(){\n\n\nexports.name = \"getpr-handler\";\nexports.platforms = [\"browser\"];\nexports.after = [\"startup\"];\n\nconst STATETITLE = \"$:/temp/contribute-docs/load-pr/status\",\n\tFORMSTATE = \"$:/temp/contribute-docs/form-state\";\n\nconst updateStatus = function(text) {\n\t$tw.wiki.addTiddler(new $tw.Tiddler({title: STATETITLE, text: text}));\n};\n\nexports.startup = async function() {\n\n\t$tw.rootWidget.addEventListener(\"tm-loadpr\",function(event){\n\t\tvar pr_id = event.param;\n\t\tloadPR(pr_id);\n\t});\n\n\tconst Logger = new $tw.utils.Logger(\"load-pullrequest\");\n\n\tfunction convertFilesToTiddlers(files) {\n\t\tconst deserializer = $tw.Wiki.tiddlerDeserializerModules[\"application/x-tiddler\"];\n\t\tlet hasError = false;\n\t\tfiles.every((file) => {\n\t\t\tlet tiddlers;\n\t\t\ttry {\n\t\t\t\ttiddlers = deserializer(file);\n\t\t\t\tif(tiddlers.length) {\n\t\t\t\t\ttiddlers.forEach((tiddlerFields) => {\n\t\t\t\t\t\tvar title = tiddlerFields.title;\n\t\t\t\t\t\tif(title) {\n\t\t\t\t\t\t\tvar tiddler = new $tw.Tiddler(tiddlerFields);\n\t\t\t\t\t\t\t// Add the tiddlers to the store\n\t\t\t\t\t\t\t$tw.wiki.addTiddler(tiddler);\n\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} catch(e) {\n\t\t\t\tupdateStatus(`There was an error loading the files for the PR ${e}.`);\n\t\t\t\thasError = true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\treturn !hasError;\n\t};\n\n\tfunction savePRMetadata(data) {\n\t\tvar tiddler = new $tw.Tiddler({title: FORMSTATE},data);\n\t\t$tw.wiki.addTiddler(tiddler);\n\t};\n\n\tasync function loadPR(pr_id) {\n\n\t\tasync function getBlob(octokit,sha) {\n\t\t\tupdateStatus(\"Loading the PR files...\");\n\t\t\tconst blob = await octokit.request(\n\t\t\t\t`GET /repos/Jermolene/TiddlyWiki5/git/blobs/${sha}`, {\n\t\t\t\towner: 'jermolene',\n\t\t\t\t\trepo: 'TiddlyWiki5',\n\t\t\t\t\tfile_sha: sha,\n\t\t\t\t\t  headers: {\n\t\t\t\t'X-GitHub-Api-Version': '2022-11-28'\n\t\t\t  }\n\t\t\t});\n\t\t\treturn $tw.utils.base64Decode(blob.data.content);\n\t\t};\n\t\t\n\t\tasync function getPR(pr_id) {\n\t\t\tupdateStatus(\"Finding the PR...\")\n\t\t\tconst pr = await octokit.request(`GET /repos/jermolene/TiddlyWiki5/pulls/${pr_id}`, {\n\t\t\t\towner: 'jermolene',\n\t\t\t\trepo: 'TiddlyWiki5',\n\t\t\t\tpull_number: `${pr_id}`,\n\t\t\t\theaders: {\n\t\t\t\t  'X-GitHub-Api-Version': '2022-11-28'\n\t\t\t\t}\n\t\t\t}).catch((err) => {\n\t\t\t\tif(err.status === 404) {\n\t\t\t\t\tthrow new Error(\"Cannot find the specified PR, please check the URL or PR number.\");\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn pr.data;\n\t\t};\n\t\n\t\tasync function getFilesForPR(pr_id) {\n\t\t\tupdateStatus(\"Finding the changes for the PR...\")\n\t\t\treturn await octokit.request(`GET /repos/jermolene/TiddlyWiki5/pulls/${pr_id}/files`, {\n\t\t\t\towner: 'jermolene',\n\t\t\t\trepo: 'TiddlyWiki5',\n\t\t\t\tpull_number: `${pr_id}`,\n\t\t\t\theaders: {\n\t\t\t\t\t'X-GitHub-Api-Version': '2022-11-28'\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tlet octokit;\n\t\ttry {\n\t\t\tawait loadOctokit();\n\t\t\tconst TOKEN = $tw.utils.getPassword(\"github-docs-pr\");\n\t\t\tif(!TOKEN || !TOKEN.length) {\n\t\t\t\talert(\"Please set the github personal access token\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toctokit = new $tw.Octokit({\n\t\t\t\tauth: TOKEN\n\t\t\t});\n\n\t\t\tconst pr = await getPR(pr_id);\n\n\t\t\tconst pr_metadata = {\n\t\t\t\tpr_title: pr.title,\n\t\t\t\tpr_body: pr.body,\n\t\t\t\tpr_url: pr.html_url,\n\t\t\t\tpr_branch: pr.head.ref,\n\t\t\t\tpr_exists: true\n\t\t\t};\n\n\t\t\tLogger.log(\"PR exists\");\n\t\t\n\t\t\tconst fileObjects = await getFilesForPR(pr_id);\n\t\t\tLogger.log(`got file info for ${fileObjects.data.length} files`);\n\t\t\n\t\t\tlet filePromises = [];\n\t\t\tfileObjects.data.forEach(async function (fob) {\n\t\t\t\tfilePromises.push(getBlob(octokit,fob.sha));\n\t\t\t});\n\n\t\t\tlet files = await Promise.all(filePromises)\n\t\t\tLogger.log(\"Fetched all PR files\");\n\n\t\t\tlet tiddlersCreated = convertFilesToTiddlers(files);\n\t\t\tif(tiddlersCreated) {\n\t\t\t\tsavePRMetadata(pr_metadata);\n\t\t\t\tupdateStatus(\"PR has been loaded. You can make further changes and submit them.\");\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tupdateStatus(`There was an error loading the pull request ${err}.`);\n\t\t}\n\t};\n};\n\nasync function loadOctokit() {\n\tif(!$tw.Octokit) {\n\t\tupdateStatus(`loading external library`);\n\t\tconst { Octokit } = await import(\"https://esm.sh/octokit\");\n\t\t$tw.Octokit = Octokit;\n\t}\n};\n\n})();\n\n/*\n\nTo do:\n\t- refactor makePR code to be more generic, just accepts text chunks (or tiddler) to save as files, along with PR metadata\n\t\t- means all the metadata handling happens in wikitext\n\t- have a flag to indicate that we have loaded an existing PR and offer option to update existing PR or submit as new PR\n\t- save as draft option, can be loaded again to continue work. (instead of backup)\n\t- floating ? button, opens a tiddler:\n\t\t- show intro again\n\t\t- load an existing PR (including drafts)\n\t\t- settings\n\t- settings button also in submission form\n\t- load existing PR button in submission form\n\t- tour explanation for loading existing PR and saving as draft\n\t\t- new tour that can be opened from submission form?\n\t\t- which tour opens is controlled by their config tiddler, and the config tiddlers can themselves be tagged and provide the tag for the tour\n\t\t- so for example tiddlers tagged $:/tags/tour and each one in the text field provides the tag for that tour\n*/","type":"application/javascript","module-type":"startup"},"$:/plugins/sq/makepr/startup.js":{"title":"$:/plugins/sq/makepr/startup.js","text":"/*\\\ntitle: $:/plugins/sq/makepr/startup.js\ntype: application/javascript\nmodule-type: startup\n\\*/\n(function(){\n\n\t/*jslint node: true, browser: true */\n\t/*global $tw: false */\n\t\"use strict\";\n\t\n\texports.name = \"makepr-handler\";\n\texports.platforms = [\"browser\"];\n\texports.after = [\"startup\"];\n\t\n\tconst REPO = \"TiddlyWiki5\",\n\t\tREPO_BRANCH = \"tiddlywiki-com\",\n\t\tSTATUS_TITLE = \"$:/state/makepr/prlink\";\n\t\n\tvar getTiddlerPath = function(title) {\n\t\tvar originalTiddlerPaths = JSON.parse($tw.wiki.getTiddlerText(\"$:/config/OriginalTiddlerPaths\",{}));\n\t\tif(originalTiddlerPaths[title]) {\n\t\t\treturn `editions/tw5.com/tiddlers/${originalTiddlerPaths[title]}`;\n\t\t} else {\n\t\t\treturn `editions/tw5.com/tiddlers/${title}.tid`;\n\t\t}\n\t}\n\t\n\tvar makepr = function(files,slug,lingo,stateTitle) {\n\t\tconst MyOctokit = $tw.Octokit.plugin($tw.createPullRequest);\n\t\tconst TOKEN = $tw.utils.getPassword(\"github-docs-pr\");\n\t\tif(!TOKEN || !TOKEN.length) {\n\t\t\talert(\"Please set the github personal access token\");\n\t\t\treturn;\n\t\t}\n\t\tconst octokit = new MyOctokit({\n\t\t\tauth: TOKEN,\n\t\t});\n\t\t\n\t\t// Returns a normal Octokit PR response\n\t\t// See https://octokit.github.io/rest.js/#octokit-routes-pulls-create\n\t\tconst REPO_OWNER = $tw.wiki.getTiddlerText(\"$:/config/sq/makepr/repoOwner\",\"jermolene\");\n\t\tconst PR_USER_BRANCH = $tw.wiki.getTiddlerText(\"$:/temp/pr-user-branch\",slug).substring(0,20);\n\t\t$tw.wiki.addTiddler(new $tw.Tiddler({title: stateTitle, text: `Creating submission...`}));\n\t\toctokit.createPullRequest({\n\t\t\towner: REPO_OWNER,\n\t\t\trepo: REPO,\n\t\t\ttitle: $tw.wiki.getTiddlerText(\"$:/temp/pr-title\") || \"Signing CLA\",\n\t\t\tbody: $tw.wiki.getTiddlerText(\"$:/temp/pr-message\"),\n\t\t\tbase: REPO_BRANCH /* To Do: allow optionally specifying branch via UI */,\n\t\t\thead: `${PR_USER_BRANCH}-${Math.floor(Date.now() / 1000)}`,\n\t\t\tchanges: [\n\t\t\t\t{\n\t\t\t\t/* optional: if `files` is not passed, an empty commit is created instead */\n\t\t\t\t\tfiles: files,\n\t\t\t\t\tcommit: $tw.wiki.getTiddlerText(\"$:/temp/pr-title\") || \"Signing CLA\",\n\t\t\t\t\temptyCommit : false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tcreateWhenEmpty: false,\n\t\t})\n\t\t.then((pr) => {\n\t\t\t //console.log(pr.data.number);\n\t\t\t$tw.wiki.addTiddler(new $tw.Tiddler({title: stateTitle, text: lingo.success, link: `https://github.com/${REPO_OWNER}/${REPO}/pull/${pr.data.number}`}));\n\t\t}).catch((err)=>{\n\t\t\t$tw.wiki.addTiddler(new $tw.Tiddler({title: stateTitle, text: `${lingo.error} ${err}`}));\t\t  \n\t\t});\n\t}\n\t\n\tvar initpr = function(files,slug,lingo,stateTitle) {\n\t\tif(!$tw.Octokit) {\n\t\t\t$tw.wiki.addTiddler(new $tw.Tiddler({title: stateTitle, text: `loading external library`}));\n\t\t\timport(\"https://esm.sh/@octokit/core@5.0.0\").then((module)=>{\n\t\t\t $tw.Octokit = module.Octokit;\n\t\t\t return import(\"https://esm.sh/octokit-plugin-create-pull-request@5.1.0\");\n\t\t\t }).then((module)=>{\n\t\t\t\t$tw.createPullRequest = module.createPullRequest;\n\t\t\t\tmakepr(files,slug,lingo,stateTitle);\n\t\t\t }).catch((err)=>{\n\t\t\t\t$tw.wiki.addTiddler(new $tw.Tiddler({title: stateTitle, text: `${lingo.error} ${err}`}));\n\t\t\t });\n\t\t} else {\n\t\t\tmakepr(files,slug,lingo,stateTitle);\n\t\t}\n\t}\n\t\n\texports.startup = function() {\n\t\t$tw.rootWidget.addEventListener(\"tm-makepr\",function(event){\n\t\t\tvar filter = event.param ||\"\",\n\t\t\t\tparamObject = event.paramObject || {},\n\t\t\t\tslug = paramObject.slug,\n\t\t\t\tstateTitle = paramObject.state,\n\t\t\t\ttiddlersToUpload = $tw.wiki.filterTiddlers(filter,$tw.rootWidget),\n\t\t\t\tfiles = {};\n\t\t\tif(!paramObject.cla && tiddlersToUpload.length) {\n\t\t\t\t$tw.utils.each(tiddlersToUpload,function(title){\n\t\t\t\t\t//check if tiddler exists?\n\t\t\t\t\tvar tiddler = $tw.wiki.getTiddler(title);\n\t\t\t\t\tif(tiddler) {\n\t\t\t\t\t\tvar path = getTiddlerPath(title),\n\t\t\t\t\t\t\twikifyParser = $tw.wiki.parseText(\"text/vnd.tiddlywiki\",$tw.wiki.getTiddlerText(\"$:/core/templates/tid-tiddler\"),{\n\t\t\t\t\t\t\t\tparseAsInline: false\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\twikifyWidgetNode = $tw.wiki.makeWidget(wikifyParser,{\n\t\t\t\t\t\t\t\tdocument: $tw.fakeDocument,\n\t\t\t\t\t\t\t\tparentWidget: $tw.rootWidget,\n\t\t\t\t\t\t\t\tvariables: {currentTiddler: title}\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\twikifyContainer = $tw.fakeDocument.createElement(\"div\"),\n\t\t\t\t\t\t\ttid;\n\t\t\t\t\t\twikifyWidgetNode.render(wikifyContainer,null);\n\t\t\t\t\t\ttid = wikifyContainer.textContent;\n\t\t\t\t\t\tfiles[path] = tid;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tvar lingo = {\n\t\t\t\t\t\"error\": \"There was an error in submitting the update.\",\n\t\t\t\t\t\"success\": \"Submission request created\"\n\t\t\t\t};\n\t\t\t\tinitpr(files,slug,lingo,stateTitle);\n\t\t\t} else if(paramObject.cla) {\n\t\t\t\tvar cla = $tw.wiki.getTiddlerText(paramObject.cla,\"\");\n\t\t\t\tif(cla) {\n\t\t\t\t\tvar lingo = {\n\t\t\t\t\t\t\"error\": \"There was an error in signing the CLA.\",\n\t\t\t\t\t\t\"success\": \"Request to sign the CLA has been submitted\"\n\t\t\t\t\t}\n\t\t\t\t\tfiles[\"licenses/cla-individual.md\"] = $tw.wiki.getTiddlerText(paramObject.cla,\"\");\n\t\t\t\t\tinitpr(files,\"Signing-CLA\",lingo,stateTitle);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t$tw.wiki.addEventListener(\"change\",function(changes){\n\t\t\tvar modifiedTiddlers = Object.keys(changes).filter(tiddler => !tiddler.startsWith(\"$:/\") && !changes[tiddler].deleted);\n\t\t\tif(modifiedTiddlers.length) {\n\t\t\t\t$tw.rootWidget.invokeActionsByTag(\"$:/tags/sq/change-actions\",null,{\"actionTiddler\": $tw.utils.stringifyList(modifiedTiddlers)});\n\t\t\t}\n\t\t});\n\t};\n\t\n\t})();","type":"application/javascript","module-type":"startup"},"$:/sq/operators/password-exists.js":{"title":"$:/sq/operators/password-exists.js","text":"/*\\\ntitle: $:/sq/operators/password-exists.js\ntype: application/javascript\nmodule-type: filteroperator\n\nFilter operator to check whether a password exists in local storage\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nExport our filter function\n*/\nexports[\"password-exists\"] = function(source,operator,options) {\n    var key = operator.operand;\n    if(key && !!$tw.utils.getPassword(key)) {\n        return [\"yes\"];\n    } else {\n        return [\"no\"];\n    }\n};\n    \n})();","type":"application/javascript","module-type":"filteroperator"},"$:/plugins/sq/makepr/pr-tiddler-list":{"title":"$:/plugins/sq/makepr/pr-tiddler-list","text":"\\define pr-tiddler-list() $:/temp/pr-tiddlers\n\n\\define advanced-filter() [[$:/temp/pr-tiddlers]get[text]enlist-input[]] [[$:/temp/pr-tiddlers]get[text]enlist-input[]addprefix[$:/temp/prpath-]] [prefix[$:/temp/pr-]] [prefix[$:/config/sq/makepr/]]\n\n\\define show-in-search() \n<$action-setfield $tiddler=\"$:/temp/advancedsearch\" text=<<advanced-filter>>/>\n<$action-setfield $tiddler=\"$:/temp/advancedsearch/input\" text=<<advanced-filter>>/>\n<$action-setfield $tiddler=\"$:/state/tab--1498284803\" text=\"$:/core/ui/AdvancedSearch/Filter\"/>\n<$action-navigate $to=\"$:/AdvancedSearch\"/>\n\\end\n\n\\define drop-actions()\n<$action-listops $tiddler=<<pr-tiddler-list>> $field=\"text\" $subfilter=\"+[insertbefore:currentTiddler<actionTiddler>]\"/>\n\\end\n\n\\define placeholder()\n<div class=\"tc-droppable-placeholder\"/>\n\\end\n\n\\define droppable-item()\n\\whitespace trim\n<$droppable actions=<<drop-actions>> enable=\"yes\">\n<<placeholder>>\n<div>\n<$button  tooltip=\"Remove this tiddler\"  class=\"tc-btn-invisible tc-btn-mini tc-small-gap-right\">\n{{$:/core/images/close-button}}\n<$action-listops $tiddler=<<pr-tiddler-list>> $field=\"text\" $subfilter=\"-[<currentTiddler>]\"/>\n</$button><$link to={{!!title}}><$view field=\"title\"/></$link>\n</div>\n</$droppable>\n\\end\n\n<$reveal tag=\"div\" class=\"tc-sidebar-tab-open pr-tiddlers\" state=\"$:/state/pr-list-mode\" text=\"dnd\" type=\"match\" default=\"dnd\">\n<$droppable tag=\"div\" actions=<<drop-actions>> enable=\"yes\">\n//Drag and drop below to add tiddlers://\n<$button class=\"tc-btn-invisible pr-listmode-btn\" set=\"$:/state/pr-list-mode\" setTo=\"text\" tooltip=\"use text editor\">{{$:/core/images/edit-button}}</$button>\n<$button class=\"tc-btn-invisible pr-listmode-btn\" tooltip=\"Show list in $:/AdvancedSearch to export\" actions=<<show-in-search>>>{{$:/core/images/export-button}}</$button>\n<$list filter=\"[<pr-tiddler-list>get[text]enlist-input[]]\" history=<<tv-history-list>> storyview=\"pop\">\n<div class=\"tc-sidebar-tab-open-item\">\n<$macrocall $name=\"droppable-item\"/>\n</div>\n</$list>\n\n<div class=\"tc-droppable-placeholder pr-list-placeholder\">\n</div>\n</$droppable>\n</$reveal>\n<$reveal tag=\"div\" class=\"\" state=\"$:/state/pr-list-mode\" text=\"dnd\" type=\"nomatch\" default=\"dnd\">\n<$button class=\"tc-btn-invisible pr-listmode-btn\" set=\"$:/state/pr-list-mode\" setTo=\"dnd\" tooltip=\"use drag and drop\">{{$:/images/tabler-icons/drag-drop-2}}</$button>\n//Use double square brackets around titles with spaces//\n<$edit-text tiddler=\"$:/temp/pr-tiddlers\" default=\"\" tag=\"textarea\" class=\"tc-edit-texteditor\"/>\n</$reveal>"},"$:/contribute/startup-actions/cla":{"title":"$:/contribute/startup-actions/cla","tags":"$:/tags/StartupAction/PostRender","text":"\\procedure get-cla()\n\n\\procedure completion()\n<$action-log hello=\"hello\"/>\n    <$list filter=\"[<status>compare:number:gteq[200]compare:number:lteq[299]]\" variable=\"ignore\">\n        <$action-setfield $tiddler=\"$:/temp/contribute/cla\" text=<<data>>/>\n    </$list>\n\\end completion\n\n<$action-sendmessage\n\t$message=\"tm-http-request\"\n\turl=\"https://raw.githubusercontent.com/Jermolene/TiddlyWiki5/tiddlywiki-com/licenses/cla-individual.md\"\n\tmethod=\"GET\"\n\toncompletion=<<completion>>\n/>\n\\end get-cla\n<<get-cla>>"},"$:/styles":{"title":"$:/styles","tags":"$:/tags/Stylesheet","text":".submit-docs-banner {\n\tposition: fixed;\n\tright: 1em;\n\tbottom: 1em;\n\tz-index: 1999;\n}\n\n.submit-button {\n\tbox-shadow: 3px 4px 0px 0px #8a2a21;\n\tbackground:linear-gradient(to bottom, #c62d1f 5%, #f24437 100%);\n\tbackground-color:#c62d1f;\n\tborder-radius:18px;\n\tborder:1px solid #d02718;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family:Arial;\n\tfont-size:20px;\n\tpadding:12px 45px;\n\ttext-decoration:none;\n\ttext-shadow:0px 1px 0px #810e05;\n}\n.submit-button:hover {\n\tbackground:linear-gradient(to bottom, #f24437 5%, #c62d1f 100%);\n\tbackground-color:#f24437;\n}\n.submit-button:active {\n\tposition:relative;\n\ttop:1px;\n}\n\n\n.submission-form .form-group {\n\tmargin-bottom: 1rem;\n\tpadding: 1.5rem;\n\tmargin-right: 0;\n\tmargin-left: 0;\n\tborder-width: 0.2rem;\n\tborder: solid #f7f7f9;\n}\n\n.submission-form h2 {\n\tmargin-top: 0.2em;\n}\n\n.submission-form .form-group :is(input,textarea) {\n\tdisplay: block;\n\twidth: 100%;\n\tpadding: 0.375rem 0.75rem;\n\tfont-size: 1rem;\n\tline-height: 1.5;\n\tcolor: #495057;\n\tbackground-color: #fff;\n\tbackground-clip: padding-box;\n\tborder: 1px solid #ced4da;\n\tborder-radius: 0.25rem;\n\ttransition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n\tbox-shadow: none;\n}\n\n.submission-form .form-group :is(input,textarea):focus {\n\tcolor: #495057;\n\tbackground-color: #fff;\n\tborder-color: #80bdff;\n\toutline: 0;\n\tbox-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\n}\n\n.submission-form button.submit {\n\tfont-weight: 400;\n\ttext-align: center;\n\twhite-space: nowrap;\n\tvertical-align: middle;\n\tpadding: 0.375rem 0.75rem;\n\tfont-size: 1rem;\n\tline-height: 1.5;\n\tborder-radius: 0.25rem;\n}\n\n.submission-form button.submit:not(:disabled):hover {\n    color: #fff;\n    background-color: #0069d9;\n    border-color: #0062cc;\n}\n\n.submission-form button.submit:not(:disabled) {\n\tcursor: pointer;\n\tcolor: #fff;\n\tbackground-color: #007bff;\n\tborder: 1px solid transparent;\n\tborder-color: #007bff;\n\ttransition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n\n}\n\n.submission-status {\n\tbackground-color:#D7BCE880;\n\tpadding:1em;\n\tmargin:1em;\n\tborder-radius:0.5em;\n}\n\n/*\n.tc-tour-panel-navigation {\n\ttext-align: center;\n}\n*/"},"$:/submit-banner":{"title":"$:/submit-banner","tags":"$:/tags/PageTemplate","text":"<div class=\"submit-docs-banner\">\n<$button tag=\"a\" class=\"submit-button\" to=\"Submit documentation updates\">Submit updates</$button>\n</div>"},"$:/tags/TourStep":{"title":"$:/tags/TourStep","created":"20230722144426557","list":"$:/contribute-docs/tour/steps/welcome $:/contribute-docs/tour/steps/how-does-it-work $:/contribute-docs/tour/steps/requirements $:/contribute-docs/tour/steps/github-account $:/contribute-docs/tour/steps/access-token $:/contribute-docs/tour/steps/cla $:/contribute-docs/tour/steps/end-of-fullscreen $:/contribute-docs/tour/steps/tracking $:/contribute-docs/tour/steps/contribute-button","modified":"20230722172054387","type":"text/vnd.tiddlywiki"},"$:/contribute-docs/tour/steps/contribute-button":{"title":"$:/contribute-docs/tour/steps/contribute-button","created":"20230722153011053","hint":"where is the submission form button?","modified":"20230722163554068","selector":".submit-docs-banner a","tags":"$:/tags/TourStep","type":"text/vnd.tiddlywiki","text":"! Edit and create tiddlers to update the documentation\n\nOnce you are ready to submit your work, open the submission form using the button in the bottom right corner.\n\nIn this form you can review which tiddlers will be submitted, and provide a short description of your changes.\n"},"$:/contribute-docs/tour/steps/tracking":{"title":"$:/contribute-docs/tour/steps/tracking","created":"20230722153011053","modified":"20230722163554068","tags":"$:/tags/TourStep","type":"text/vnd.tiddlywiki","text":"! Edit and create tiddlers to update the documentation\n\nThe wiki will keep track of all tiddlers that you create or modify so that you can easily submit them once you have finished editing.\n\n<<tour-buttons>>"},"$:/contribute-docs/tour/steps/access-token":{"title":"$:/contribute-docs/tour/steps/access-token","display-mode":"fullscreen","tags":"$:/tags/TourStep","condition":"[password-exists[github-docs-pr]match[no]]","text":"! Access token\n\n* A ~GitHub access token allows contributions to be made on your behalf. \n* The access token you provide will be saved in your browser.\n* The same access token will be reused for future contributions until it expires.\n\nThe link below will open the ~GitHub page for creating an access token with the minimum required permissions already selected. Add a note to remind yourself what the access token is for, and create the token and copy it.\n\n[[Create an access token|https://github.com/settings/tokens/new?scopes=public_repo]]\n\nPlease enter below the access token you have created:\n\n<$password name=\"github-docs-pr\"/>\n\n<<tour-buttons>>\n"},"$:/contribute-docs/tour/steps/cla":{"title":"$:/contribute-docs/tour/steps/cla","display-mode":"fullscreen","startup-actions":"<$action-setfield $tiddler=\"$:/temp/Tour/DemoStoryList\" list=\"$:/plugins/tiddlywiki/tour/steps/tiddlers/Jupiter $:/plugins/tiddlywiki/tour/steps/tiddlers/Saturn\"/>","tags":"$:/tags/TourStep","condition":"[{$:/temp/contribute/cla}!is[blank]] :then[{$:/temp/contribute/gitusername}escaperegexp[]addprefix[(?i)@]addsuffix[\\b]] :map[{$:/temp/contribute/cla}!regexp<currentTiddler>] :and[!is[blank]] :else[{$:/temp/contribute/gitusername}is[blank]]","text":"\\procedure cla-state() $:/temp/state/sign-cla\n\\procedure sign-cla()\n<$let\n    cla-tiddler=\"$:/temp/contribute/cla\"\n    original={{{ [<cla-tiddler>get[text]] }}}\n    signature=`@${ [{$:/temp/contribute/gitusername}] }$, ${ [<now YYYY/0MM/0DD>] }$`\n>\n<$action-setfield $tiddler=<<cla-tiddler>> text=`$(original)$\n$(signature)$`/>\n<$action-sendmessage\n\t$message=\"tm-makepr\"\n    cla=\"$:/temp/contribute/cla\"\n    state=<<cla-state>>\n/>\n</$let>\n\\end\n\n! Contributor License Agreement\n\nIt looks like this is the first time you are contributing to ~TiddlyWiki5. Welcome! \n\nLike other ~OpenSource projects, ~TiddlyWiki5 needs a signed contributor license agreement (CLA) from individual contributors.\n\nThis is a legal agreement that allows contributors to assert that they own the copyright of their contribution, and that they agree to license it to the ~UnaMesa Association (the legal entity that owns TiddlyWiki on behalf of the community).\n\nPlease [[read the CLA|https://github.com/Jermolene/TiddlyWiki5/blob/tiddlywiki-com/licenses/cla-individual.md]] and confirm below that you wish to sign it. You only have to do this once!\n\n<$list filter=\"[{$:/temp/contribute/gitusername}!is[blank]]\" variable=\"null\" emptyMessage=\"\"\"<p class=\"tc-error\" style=\"padding:0.5em;\">Please provide your ~GitHub username in the previous steps in order to sign the CLA.</p>\"\"\">\n<$button class=\"tc-btn-big-green\" actions=<<sign-cla>> >Sign the CLA\n</$button>\n\n<$list filter=\"[<cla-state>] :filter[get[text]!is[blank]]\">\n<div class=\"submission-status\">\n<$list filter=\"[<cla-state>has[link]]\" emptyMessage=\"\"\"<$text text={{!!text}}/>\"\"\">\n<a href={{!!link}} class=\"tc-tiddlylink-external\" target=\"_blank\" rel=\"noopener noreferrer\"><$transclude/></a>\n<p>You many continue</p>\n</$list>\n</div>\n</$list>\n\n</$list>\n\n<<tour-buttons>>"},"$:/contribute-docs/tour/steps/end-of-fullscreen":{"title":"$:/contribute-docs/tour/steps/end-of-fullscreen","created":"20230722144436511","display-mode":"fullscreen","modified":"20230722150025593","tags":"$:/tags/TourStep","type":"text/vnd.tiddlywiki","text":"! Congratulations!\n\nYou have everything in place to start editing and creating documentation.\n\nNow we are going guide you through submitting your contributions.\n\n<<tour-buttons>>\n"},"$:/contribute-docs/tour/steps/github-account":{"title":"$:/contribute-docs/tour/steps/github-account","created":"20230722143606139","display-mode":"fullscreen","modified":"20230722143813339","startup-actions":"<$action-setfield $tiddler=\"$:/temp/Tour/DemoStoryList\" list=\"$:/plugins/tiddlywiki/tour/steps/tiddlers/Jupiter $:/plugins/tiddlywiki/tour/steps/tiddlers/Saturn\"/>","tags":"$:/tags/TourStep","type":"text/vnd.tiddlywiki","text":"\\define tour-simplified-tiddler-close-button() yes\n\n! ~GitHub account\n\nIn order for your contributions to be submitted to the ~TiddlyWiki project, you will need a [[GitHub|https://github.com/]] account.\n\nIf you do not have an account, please create one before continuing. \n\nPlease enter your ~GitHub username:\n\n<$edit-text tiddler=\"$:/temp/contribute/gitusername\" class=\"tc-edit-texteditor\" tag=\"input\"/>\n\n<<tour-buttons>>"},"$:/contribute-docs/tour/steps/how-does-it-work":{"title":"$:/contribute-docs/tour/steps/how-does-it-work","created":"20230722142943621","display-mode":"fullscreen","modified":"20230722143543938","tags":"$:/tags/TourStep","type":"text/vnd.tiddlywiki","text":"!How does this work?\n\n# You edit and create tiddlers in this special version of tiddlywiki.com\n# With a click of a button, they are submitted as a contribution in your name (on Github)\n\n<<tour-buttons>>\n"},"$:/contribute-docs/tour/steps/requirements":{"title":"$:/contribute-docs/tour/steps/requirements","created":"20230722143439396","display-mode":"fullscreen","modified":"20230722143829142","startup-actions":"<$action-setfield $tiddler=\"$:/temp/Tour/DemoStoryList\" list=\"$:/plugins/tiddlywiki/tour/steps/tiddlers/Jupiter\"/>","tags":"$:/tags/TourStep","type":"text/vnd.tiddlywiki","text":"! Requirements\n\nIn order for your contributions to be submitted on your behalf, you will need:\n\n* a [[GitHub|https://github.com/]] account\n* a ~GitHub access token: you will be guided in creating one\n\n<<tour-buttons>>"},"$:/contribute-docs/tour/steps/welcome":{"title":"$:/contribute-docs/tour/steps/welcome","created":"20230722142901285","display-mode":"fullscreen","modified":"20230722142921326","tags":"$:/tags/TourStep","type":"text/vnd.tiddlywiki","startup-actions":"<$action-setfield $tiddler=\"$:/state/tour/step\" text=<<currentStep>>/>","text":"! Contribute to the ~TiddlyWiki documentation\n\n!!!This a special version of tiddlywiki.com designed to help you contribute to and improve the documentation.\n\n<<tour-buttons>>\n<!--\n<p style=\"text-align:center;\">\n<$button set=\"$:/config/ShowTour\" setTo=\"no\" class=\"tc-btn-invisible tc-btn-big-green\" tooltip=\"exit tour\"><span style=\"fill:#bbb;\">I know what to do<br>skip the instructions</span></$button>\n</p>\n-->"},"tour setup":{"title":"tour setup","created":"20230722142822959","modified":"20230722142831854","tags":"","type":"text/vnd.tiddlywiki","text":"<<tag $:/tags/TourStep>>"}}}